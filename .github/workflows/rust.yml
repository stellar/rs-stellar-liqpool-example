name: Rust

on:
  push:
    branches: [main, dev]
  pull_request:

env:
  RUSTFLAGS: -D warnings

jobs:

  complete:
    if: always()
    needs: [fmt, rust-analyzer-compat, build-and-test]
    runs-on: ubuntu-latest
    steps:
    - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: exit 1

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update
    - run: make fmt

  rust-analyzer-compat:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update
    - run: rustup +nightly component add rust-analyzer
    - name: Check if rust-analyzer encounters any errors parsing project
      run: rustup run nightly rust-analyzer analysis-stats token/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats deployer/deployer/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats deployer/contract/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats simple_account/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats timelock/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats alloc/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats hello_world/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats auth/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats custom_types/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats single_offer/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats liquidity_pool/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats increment/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats atomic_multiswap/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats cross_contract/contract_b/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats cross_contract/contract_a/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats errors/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats account/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats events/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats logging/ 2>&1 | (! grep ERROR)
    - run: rustup run nightly rust-analyzer analysis-stats atomic_swap/ 2>&1 | (! grep ERROR)

  build-and-test:
    strategy:
      matrix:
        sys:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
    runs-on: ${{ matrix.sys.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: stellar/actions/rust-cache@main
    - run: rustup update
    - run: rustup target add ${{ matrix.sys.target }}
    - run: make test
      env:
        CARGO_BUILD_TARGET: ${{ matrix.sys.target }}
