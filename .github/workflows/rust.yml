name: Rust

on:
  push:
    branches: [main, dev]
  pull_request:

env:
  RUSTFLAGS: -D warnings

jobs:

  complete:
    if: always()
    needs: [fmt, rust-analyzer-compat, build-and-test]
    runs-on: ubuntu-latest
    steps:
    - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: exit 1

  dirs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - id: dirs
      run: |
        dirs=$(find . -type f -name 'Makefile' -mindepth 2 | xargs dirname | sed 's|^\./||' | jq -Rnc '[inputs | "\(.)"]')
        echo "dirs=$dirs" >> $GITHUB_OUTPUT
    outputs:
      dirs: ${{ steps.dirs.outputs.dirs }}

  fmt:
    needs: dirs
    strategy:
      matrix:
        working-directory: ${{ fromJSON(needs.dirs.outputs.dirs) }}
    defaults:
      run:
        working-directory: ${{ matrix.working-directory }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update
    - run: cargo fmt --all --check

  rust-analyzer-compat:
    needs: dirs
    strategy:
      matrix:
        working-directory: ${{ fromJSON(needs.dirs.outputs.dirs) }}
    defaults:
      run:
        working-directory: ${{ matrix.working-directory }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update
    - run: rustup +nightly component add rust-analyzer
    - name: Check if rust-analyzer encounters any errors parsing project
      run: rustup run nightly rust-analyzer analysis-stats 2>&1 | (! grep ERROR)

  build-and-test:
    needs: dirs
    strategy:
      matrix:
        working-directory: ${{ fromJSON(needs.dirs.outputs.dirs) }}
        sys:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
    defaults:
      run:
        working-directory: ${{ matrix.working-directory }}
    runs-on: ${{ matrix.sys.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: stellar/actions/rust-cache@main
    - run: rustup update
    - run: rustup target add ${{ matrix.sys.target }}
    - run: make test
      env:
        CARGO_BUILD_TARGET: ${{ matrix.sys.target }}
